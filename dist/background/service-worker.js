var g=Object.defineProperty;var u=(a,e,t)=>e in a?g(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var r=(a,e,t)=>u(a,typeof e!="symbol"?e+"":e,t);class w{constructor(){r(this,"config",{ALARM_NAME:"REDMINE_HELPER_DEV_RELOAD",CHECK_INTERVAL:.1,FILE_LIST:["http://127.0.0.1:5501/dist/manifest.json","http://127.0.0.1:5501/dist/options/options.js","http://127.0.0.1:5501/dist/background/service-worker.js","http://127.0.0.1:5501/dist/content/content.js"]});r(this,"fileCache",{});r(this,"isInitialized",!1);r(this,"handleAlarm",e=>{e.name===this.config.ALARM_NAME&&this.checkForChanges().catch(console.error)})}async initialize(){if(!this.isInitialized)try{await chrome.alarms.get(this.config.ALARM_NAME)||await chrome.alarms.create(this.config.ALARM_NAME,{periodInMinutes:this.config.CHECK_INTERVAL}),await this.checkForChanges(),this.isInitialized=!0,console.log("🔥 Redmine Helper 开发模式热重载已启用")}catch(e){console.error("初始化开发热重载失败:",e)}}async checkForChanges(){const e=this.config.FILE_LIST.map(async t=>{try{const n=await fetch(t);if(!n.ok)return;const s=await n.text(),o=this.fileCache[t];if(o&&o!==s){console.log("📁 检测到文件变化:",t),this.reload();return}this.fileCache[t]=s}catch{}});await Promise.all(e)}async reload(){var e;try{const t=await chrome.tabs.query({active:!0,currentWindow:!0});(e=t[0])!=null&&e.id&&await chrome.tabs.reload(t[0].id),chrome.runtime.reload()}catch(t){console.error("重载失败:",t),chrome.runtime.reload()}}}const i=class i{static async getSettings(){try{return(await chrome.storage.local.get(i.STORAGE_KEY))[i.STORAGE_KEY]||{}}catch(e){return console.error("获取设置失败:",e),{}}}static async sendSettingsToTab(e){try{const t=await this.getSettings();await chrome.tabs.sendMessage(e,t)}catch(t){console.debug("发送设置到标签页失败:",t)}}};r(i,"STORAGE_KEY","settings");let c=i;class A{static async openOrUpdateRedminePage(){try{const e=await c.getSettings(),{url:t,path:n}=e;if(!t){console.warn("未配置 Redmine 网址");return}const s=t.split(",")[0].trim().replace(/\/$/,""),o=this.normalizePath(n),h=new URL(o,s).href,d=await chrome.tabs.query({url:`${s}/*`});if(d.length>0){const m=d[0];await chrome.tabs.update(m.id,{active:!0,url:h})}else await chrome.tabs.create({url:h})}catch(e){console.error("打开Redmine页面失败:",e)}}static normalizePath(e){return e?e.startsWith("/")?e:`/${e}`:"/my/page"}}const l=async()=>{try{if((await chrome.management.getSelf()).installType==="development"){const e=new w;await e.initialize(),chrome.alarms.onAlarm.addListener(e.handleAlarm)}}catch(a){console.error("初始化开发环境失败:",a)}};chrome.tabs.onActivated.addListener(async a=>{await c.sendSettingsToTab(a.tabId)});chrome.action.onClicked.addListener(async()=>{await A.openOrUpdateRedminePage()});chrome.runtime.onStartup.addListener(()=>{l().catch(console.error)});chrome.runtime.onInstalled.addListener(()=>{l().catch(console.error)});l().catch(console.error);
